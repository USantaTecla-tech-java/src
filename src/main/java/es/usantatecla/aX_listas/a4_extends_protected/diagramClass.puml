
@startuml

class Interval {
	double min
	double max
	 Interval(double min, double max) 
	 Interval() 
	 Interval(Interval interval) 
	 double getMin() 
	 double getMax() 
	 void set(Interval interval) 
	 boolean equals(Interval interval)
	 double length()
	 double getMiddlePoint() 
	 Interval copy()
	 Interval symetric() 
	 void shift(double amount)
	 void scale(double factor) 
	 boolean includes(double value) 
	 boolean includes(Interval interval) 
	 Interval intersection(Interval interval) 
	 Interval shifted(double amount) 
	 void read()
	 String toString()
}

class Iterator {
	 Node current
	 Iterator(Node current) 
	 boolean hasNext()
	 Interval next()
}

class List {
	 Node first
	 Node last
	 List() 
	 Node getFirst() 
	 Node getLast()
	 void setFirst(Node first) 
	 void setEnd(Node last)
	 boolean isEmpty() 
	 void insertFirst(Interval interval)
	 void insertLast(Interval interval)
	 Interval removeFirst()
	 Interval removeLast()
	 boolean includes(Interval interval) 
	 Iterator getIterator()
	 void writeln() 
}   

class Node extends Interval {
	 Node previous
	 Node next
	 Node(Node previous, Interval interval, Node mext) 
	 Node getPrevious()
	 Node getNext() 
	 void setPrevious(Node previous) 
	 void setNext(Node next)
	 Interval getInterval() 
}

class SentinelList extends List {
	 boolean includes(Interval interval) 
}

class Set extends List {
	 void insertFirst(Interval interval) 
	 void insertLast(Interval interval)
	 Set union(Set set)
	 Set intersection(Set set) 
}

Iterator -down-> Interval
List .down.> Interval
List *-down-> Iterator
@enduml
